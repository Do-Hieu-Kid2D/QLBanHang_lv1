<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picMatHang.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>